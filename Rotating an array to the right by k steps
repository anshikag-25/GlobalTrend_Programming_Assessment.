#include <algorithm>
#include <iostream>
#include <vector>

// Function to reverse a section of the array
void reverseArray(std::vector<int> &nums, int start, int end) {
  while (start < end) {
    std::swap(nums[start], nums[end]);
    start++;
    end--;
  }
}

// Function to rotate the array to the right by k steps
void rotate(std::vector<int> &nums, int k) {
  int n = nums.size();
  k = k % n; // In case k is greater than the size of the array

  // Step 1: Reverse the entire array
  reverseArray(nums, 0, n - 1);

  // Step 2: Reverse the first k elements
  reverseArray(nums, 0, k - 1);

  // Step 3: Reverse the remaining n - k elements
  reverseArray(nums, k, n - 1);
}

int main() {
  std::vector<int> nums = {1, 2, 3, 4, 5, 6, 7};
  int k = 3;

  rotate(nums, k);

  // Print the rotated array
  for (int num : nums) {
    std::cout << num << " ";
  }
  std::cout << std::endl;

  return 0;
}
